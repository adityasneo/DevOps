DevOps combines development (Dev) and operations (Ops) to unite people, process, and technology in application planning, development, delivery, and operations. DevOps enables coordination and collaboration between formerly siloed roles like development, IT operations, quality engineering, and security.

Teams adopt DevOps culture, practices, and tools to increase confidence in the applications they build, respond better to customer needs, and achieve business goals faster. DevOps helps teams continually provide value to customers by producing better, more reliable products

DevOps goals and benefits
When a team adopts DevOps culture, practices, and tools, they can achieve amazing things

Accelerate time to market
Through increased efficiencies, improved team collaboration, automation tools, and continuous deployment--teams are able to rapidly reduce the time from product inception to market launch
Adapt to the market and competition
A DevOps culture demands teams have a customer-first focus. By marrying agility, team collaboration, and focus on the customer experience, teams can continuously deliver value to their customers and increase their competitiveness in the marketplace
Maintain system stability and reliability
By adopting continuous improvement practices, teams are able to build in increased stability and reliability of the products and services they deploy. These practices help reduce failures and risk
Improve the mean time to recovery
The mean time to recovery metric indicates how long it takes to to recover from a failure or breach. To manage software failures, security breaches, and continuous improvement plans, teams should measure and work to improve this metric

The following practices are key components of a DevOps culture
Collaboration, visibility, and alignment
Shifts in scope and accountability
Shorter release cycles
Continuous learning

Implement DevOps practices
Continuous integration and continuous delivery (CI/CD)
Agile software development
Infrastructure as code
Configuration management
Continuous monitoring

Development
The development phase includes all aspects of developing software code. In this phase, DevOps teams do the following tasks:

Select a development environment.
Write, test, review, and integrate the code.
Build the code into artifacts to deploy into various environments.
Use version control, usually Git, to collaborate on code and work in parallel
